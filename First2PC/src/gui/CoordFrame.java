/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import definitions.Command;
import definitions.Params;
import first2pc.Cohort;
import first2pc.Coordinator;
import java.awt.Color;
import java.awt.Window;
import java.io.File;
import java.io.IOException;
import java.lang.management.ManagementFactory;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.ButtonGroup;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JTextArea;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author Lorenzo
 */
public class CoordFrame extends javax.swing.JFrame {

    private Coordinator coordinator;

    /**
     * Creates new form CoordFrame
     */
    public CoordFrame(Coordinator coordinator) {
        this.coordinator = coordinator;
        initComponents();
        myInitComponents();
    }

    private void myInitComponents() {
        DefaultCaret caret = (DefaultCaret) this.consolleTextArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        this.componentName.setText(coordinator.getName());
        String s = "Coordinator: " + coordinator.getName() + "\n";
        for (Cohort c : coordinator.getCohorts()) {
            s += c.getName() + "\n";
        }
        this.processesTextArea.append(s);
        ButtonGroup group = new ButtonGroup();
        group.add(radio_broadcast);
        group.add(radio_multicast);
        radio_broadcast.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        componentName = new javax.swing.JLabel();
        label_deicision = new javax.swing.JLabel();
        decisionEditLbl = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        State = new javax.swing.JLabel();
        init_lbl = new javax.swing.JLabel();
        wait_lbl = new javax.swing.JLabel();
        abort_lbl = new javax.swing.JLabel();
        commit_lbl = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        consolleTextArea = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        btn_requestVote = new javax.swing.JButton();
        btn_commit = new javax.swing.JButton();
        btn_abort = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        processes_lbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        processesTextArea = new javax.swing.JTextArea();
        pb_timeout = new javax.swing.JProgressBar();
        radio_broadcast = new javax.swing.JRadioButton();
        radio_multicast = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        componentName.setText("Coordinator");

        label_deicision.setText("vote:");

        decisionEditLbl.setText("???");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(componentName)
                .addGap(43, 43, 43)
                .addComponent(label_deicision)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(decisionEditLbl)
                .addGap(70, 70, 70))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(componentName)
                    .addComponent(label_deicision)
                    .addComponent(decisionEditLbl))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        State.setText("STATE:");

        init_lbl.setText("INIT");

        wait_lbl.setText("WAIT");
        wait_lbl.setEnabled(false);

        abort_lbl.setText("ABORT");
        abort_lbl.setEnabled(false);

        commit_lbl.setText("COMMIT");
        commit_lbl.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(State)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wait_lbl)
                            .addComponent(init_lbl)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(abort_lbl)
                        .addGap(49, 49, 49)
                        .addComponent(commit_lbl)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(State)
                    .addComponent(init_lbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(wait_lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(abort_lbl)
                    .addComponent(commit_lbl))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 153));

        consolleTextArea.setColumns(20);
        consolleTextArea.setRows(5);
        jScrollPane1.setViewportView(consolleTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        btn_requestVote.setText("RequestVote");
        btn_requestVote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_requestVoteActionPerformed(evt);
            }
        });

        btn_commit.setText("COMMIT");
        btn_commit.setEnabled(false);
        btn_commit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_commitActionPerformed(evt);
            }
        });

        btn_abort.setText("ABORT");
        btn_abort.setEnabled(false);
        btn_abort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_requestVote)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_commit)
                .addGap(18, 18, 18)
                .addComponent(btn_abort)
                .addGap(35, 35, 35))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_requestVote)
                    .addComponent(btn_commit)
                    .addComponent(btn_abort))
                .addContainerGap())
        );

        processes_lbl.setText("Known Processes");

        processesTextArea.setEditable(false);
        processesTextArea.setColumns(20);
        processesTextArea.setRows(5);
        jScrollPane2.setViewportView(processesTextArea);

        pb_timeout.setMaximum(10);

        radio_broadcast.setSelected(true);
        radio_broadcast.setText("broadcast");

        radio_multicast.setText("multicast");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(processes_lbl)
                .addContainerGap(174, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
            .addComponent(pb_timeout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(radio_broadcast)
                .addGap(18, 18, 18)
                .addComponent(radio_multicast)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(processes_lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pb_timeout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_broadcast)
                    .addComponent(radio_multicast))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_requestVoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_requestVoteActionPerformed
        //get vote from user
        String input = JOptionPane.showInputDialog(this, "Inserire voto (numero) da inviare");
        Integer num = Integer.parseInt(input);
        this.decisionEditLbl.setText("" + num);
        this.consolleTextArea.append("Inviando le richieste...\n");
        //state transition
        this.init_lbl.setEnabled(false);
        this.wait_lbl.setEnabled(true);
        this.btn_requestVote.setEnabled(false);
        //handle for cootdinator
        final Coordinator c = this.coordinator;
        //prepare thread for request sending

        final Map<String, Object> params = new HashMap<>();
        params.put(Params.VOTE, num);
        if (radio_multicast.isSelected()) {
            List<String> multicasTarget = getMulticasTarget();
            params.put(Params.BROADCAST, new Boolean(false));
            params.put(Params.COHORTS_NAMES, multicasTarget);
        } else {
            params.put(Params.BROADCAST, new Boolean(true));
        }
        Thread t = new Thread(new Runnable() {

            @Override
            public void run() {
                c.sendRequest(Command.REQUEST_VOTE, params);

            }
        });
        t.start();
    }//GEN-LAST:event_btn_requestVoteActionPerformed

    private void btn_commitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_commitActionPerformed
        // TODO add your handling code here:
        btn_abort.setEnabled(false);
        btn_commit.setEnabled(false);
        final HashMap<String, Object> params = new HashMap<>();
        if (radio_multicast.isSelected()) {
            List<String> multicasTarget = getMulticasTarget();
            params.put(Params.BROADCAST, new Boolean(false));
            params.put(Params.COHORTS_NAMES, multicasTarget);
        } else {
            params.put(Params.BROADCAST, new Boolean(true));
        }
        Thread t = new Thread(new Runnable() {
            final Coordinator c = coordinator;

            @Override
            public void run() {
                c.commit(Command.COMMIT, params);

            }
        });
        t.start();
    }//GEN-LAST:event_btn_commitActionPerformed

    private void btn_abortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abortActionPerformed
        // TODO add your handling code here:
        btn_abort.setEnabled(false);
        btn_commit.setEnabled(false);
        final HashMap<String, Object> params = new HashMap<>();
        if (radio_multicast.isSelected()) {
            List<String> multicasTarget = getMulticasTarget();
            params.put(Params.BROADCAST, new Boolean(false));
            params.put(Params.COHORTS_NAMES, multicasTarget);
        } else {
            params.put(Params.BROADCAST, new Boolean(true));
        }
        Thread t = new Thread(new Runnable() {
            final Coordinator c = coordinator;

            @Override
            public void run() {
                c.abort(Command.ABORT, params);

            }
        });
        t.start();
    }//GEN-LAST:event_btn_abortActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel State;
    private javax.swing.JLabel abort_lbl;
    private javax.swing.JButton btn_abort;
    private javax.swing.JButton btn_commit;
    private javax.swing.JButton btn_requestVote;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel commit_lbl;
    private javax.swing.JLabel componentName;
    private javax.swing.JTextArea consolleTextArea;
    private javax.swing.JLabel decisionEditLbl;
    private javax.swing.JLabel init_lbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_deicision;
    private javax.swing.JProgressBar pb_timeout;
    private javax.swing.JTextArea processesTextArea;
    private javax.swing.JLabel processes_lbl;
    private javax.swing.JRadioButton radio_broadcast;
    private javax.swing.JRadioButton radio_multicast;
    private javax.swing.JLabel wait_lbl;
    // End of variables declaration//GEN-END:variables

    public Coordinator getCoordinator() {
        return coordinator;
    }

    public void setCoordinator(Coordinator coordinator) {
        this.coordinator = coordinator;
    }

    public JTextArea getConsolleTextArea() {
        return consolleTextArea;
    }

    public void setConsolleTextArea(JTextArea consolleTextArea) {
        this.consolleTextArea = consolleTextArea;
    }

    public JProgressBar getPb_timeout() {
        return pb_timeout;
    }

    public void allowCommitOrAbort() {
        this.wait_lbl.setEnabled(false);
        this.commit_lbl.setEnabled(true);
        this.commit_lbl.setForeground(Color.red);
        this.abort_lbl.setEnabled(true);
        this.abort_lbl.setForeground(Color.red);
        btn_requestVote.setEnabled(false);
        btn_commit.setEnabled(true);
        btn_abort.setEnabled(true);
    }

    public void displayCommit() {
        consolleTextArea.append("COMMIT\n");
        commit_lbl.setForeground(Color.BLUE);
        abort_lbl.setForeground(Color.BLACK);
        abort_lbl.setEnabled(false);
    }

    public void displayAbort() {
        consolleTextArea.append("ABORT\n");
        init_lbl.setEnabled(false);
        wait_lbl.setEnabled(false);
        abort_lbl.setEnabled(true);
        abort_lbl.setForeground(Color.BLUE);
        commit_lbl.setForeground(Color.BLACK);
        commit_lbl.setEnabled(false);
        //System.out.println("Disply abort coordinator");
    }

    private List<String> getMulticasTarget() {
        Vector<String> names = new Vector<>();
        for (Cohort c : coordinator.getCohorts()) {
            names.add(c.getName());
        }
        JList list = new JList(names);
        JOptionPane.showMessageDialog(
                this, list, "Multi-Select Example", JOptionPane.PLAIN_MESSAGE);
        List<String> selectedValuesList = list.getSelectedValuesList();
        for (String sl : selectedValuesList) {
            System.out.println(sl);
        }
        return selectedValuesList;
    }

    public void allowAbort() {
        this.wait_lbl.setEnabled(false);
        this.commit_lbl.setEnabled(false);
        //this.commit_lbl.setForeground(Color.red);
        this.abort_lbl.setEnabled(true);
        this.abort_lbl.setForeground(Color.red);
        btn_requestVote.setEnabled(false);
        //btn_commit.setEnabled(true);
        btn_abort.setEnabled(true);
    }
    public void allowCommit() {
        this.wait_lbl.setEnabled(false);
        this.commit_lbl.setEnabled(true);
        this.commit_lbl.setForeground(Color.red);
        this.abort_lbl.setEnabled(false);
        this.abort_lbl.setForeground(Color.red);
        btn_requestVote.setEnabled(false);
        btn_commit.setEnabled(true);
        //btn_abort.setEnabled(true);
    }
}
